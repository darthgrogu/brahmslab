// <auto-generated />
using System;
using BrahmsLab.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BrahmsLab.DataAccess.Migrations
{
    [DbContext(typeof(BrahmsLabDbContext))]
    partial class BrahmsLabDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("BrahmsLab.Core.Models.SpectralScan", b =>
                {
                    b.Property<int>("LocalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BackgroundClass")
                        .HasColumnType("TEXT");

                    b.Property<string>("BackgroundDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("GeneralComment")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasBackgroundInMeasurement")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HasGlue")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasLowReflectanceBackground")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HasNonGlueContamination")
                        .HasColumnType("TEXT");

                    b.Property<string>("HerbariumCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("MeasurementFlags")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MeasurementIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Operator")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PercentBackgroundInMeasurement")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProjectId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpectrumJsonData")
                        .HasColumnType("TEXT");

                    b.Property<int>("SyncStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TargetClass")
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetTissueId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TissueDevelopmentalStage")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TissueLocationX")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TissueLocationY")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TissueNotes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserInputCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("LocalId");

                    b.ToTable("SpectralScans");
                });
#pragma warning restore 612, 618
        }
    }
}
